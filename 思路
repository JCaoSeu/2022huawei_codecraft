有N个客户节点和M个边缘节点，T个时刻，每个时刻客户节点都有一定的流量需求，边缘节点都有一定的带宽可以提供，客户节点和边缘节点之间的连接关系每个时刻都会变化。
一个边缘节点的成本为：对T个时刻分配出的带宽进行排序，95百分位值代表成本
总体成本就是所有边缘节点的成本之和。
优化目标：最小化总体成本

首先想到贪心的方法，每个时刻可以尽可能的平均分配带宽，或尽可能将带宽分配给少数几个边缘节点。
然而我们认为这种方法有可能导致分配的总带宽不满足需求，即后面的客户节点和边缘节点之间不能连通。

所以我们想到了网络流（最大流）的方法，这样必然能找出符合需求的分配方式。
抽象成一个四层的网络流模型，有起点s，汇点t，中间两层客户节点和边缘节点。
但是这样只能确保满足需求，并没有优化。
因此，
insight1:认为尽可能的平均分配（每个时刻边缘节点的负载尽可能均衡，感觉这样更符合实际），会使最后的成本尽可能降低。

因此我们先对边缘节点到汇点的容量做了一个限制，设为constraint（可调节的参数），
1.如果某一时刻在此限制下，最大流能够满足需求，则认为这种分配方式足够平均（因为所有的边缘节点的
负载都不超过constraint）
2.如果此时最大流小于需求量，那么不满足需求，就要取消constraint限制，重新做一次最大流。

insight2:重新分配时，认为应该优先考虑此时95百分位低的边缘节点。因为95百分位代表最终的成本，如果一个节点95百分位较高，那么成本已经比较高了，如果先考虑这样的节点，
95百分位值有可能继续变大，导致最终成本的增加。我们为不同优先级的节点赋予不同的费用，然后按照最小费用最大流的方法重新分配。

insight3：在分配结束后，还可以做一定的流量迁移。遍历所有分配，如果某一边缘节点的95百分位的流量可以迁移到同时刻其他节点上（减少了本节点95百分位值）
且并不会增加其他节点的95百分位值，那么就可以进行迁移。
